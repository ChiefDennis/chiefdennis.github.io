<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dennis Drebitca on Chief Dennis&#39; Blog</title>
    <link>https://chiefdennis.github.io/authors/dennis-drebitca/</link>
    <description>Recent content in Dennis Drebitca on Chief Dennis&#39; Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 09 Mar 2024 08:43:16 +0100</lastBuildDate>
    <atom:link href="https://chiefdennis.github.io/authors/dennis-drebitca/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Configure and deploy Azure Firewall Manager Part 2: Deploy the servers</title>
      <link>https://chiefdennis.github.io/projects/configure_deploy_azure_fw_manager_2/</link>
      <pubDate>Sat, 09 Mar 2024 08:43:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/projects/configure_deploy_azure_fw_manager_2/</guid>
      <description>For part 2 of the series, we will deploy our workloads/servers. This process is similar as to any virtual machine deployment in the Azure Cloud.&#xA;Deploy the servers&#xD;Link to heading&#xD;Deploying servers involves setting up and preparing a server to host and run applications or services. When discussing deploying servers in a cloud environment, this process often consists of creating and configuring virtual machines, setting up network connectivity and security, and installing and configuring software, all done within the cloud provider&amp;rsquo;s management interface or using infrastructure as code (IaC) tools such as Terraform.</description>
    </item>
    <item>
      <title>Configure and deploy Azure Firewall Manager Part 1: Create a hub and spoke architecture</title>
      <link>https://chiefdennis.github.io/projects/configure_deploy_azure_fw_manager_1/</link>
      <pubDate>Mon, 26 Feb 2024 08:43:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/projects/configure_deploy_azure_fw_manager_1/</guid>
      <description>Azure Firewall Manager is a central network security policy and route management service for globally distributed, software-defined perimeters. It can provide security management for two network architecture types, the secured virtual hub and the hub virtual network.&#xA;Using Azure Firewall Manager, you can create secured virtual hubs to secure your cloud network traffic destined to private IP addresses, Azure PaaS, and the Internet. Traffic routing to the firewall is automated, so there&amp;rsquo;s no need to create user-defined routes (UDRs).</description>
    </item>
    <item>
      <title>Monitored HTB Walkthrough</title>
      <link>https://chiefdennis.github.io/posts/htb_monitored/</link>
      <pubDate>Sat, 17 Feb 2024 13:07:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/posts/htb_monitored/</guid>
      <description>The Monitored HTB machine is a medium difficulty level HackTheBox Machine. The main tools and techniques used to crack this machine are:&#xA;- Dirsearch&#xD;- CVE-2023-40931&#xD;- NMAP UDP scan&#xD;- SNMP enumeration with SNMPwalk&#xD;- JohnTheRipper&#xD;- SQL injection with SQLmap&#xD;Reconnaissance&#xD;Link to heading&#xD;We start a broad Nmap TCP scan by executing the following command:&#xA;sudo nmap -sS -T5 -vvv -p- 10.10.11.248 -Pn -oG nmap_inicial Where the arguments mean:</description>
    </item>
    <item>
      <title>Bizness HTB Walkthrough</title>
      <link>https://chiefdennis.github.io/posts/htb_bizness/</link>
      <pubDate>Fri, 02 Feb 2024 13:07:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/posts/htb_bizness/</guid>
      <description>The Bizness HTB machine is an easy difficulty level HackTheBox Machine. The main techniques and tools used to crack this machine are:&#xA;- Dirsearch&#xD;- CVE-2023-51467&#xD;- Grep, find and strings&#xD;- Hashcat&#xD;Reconnaissance&#xD;Link to heading&#xD;We start a broad Nmap scan by executing the following command:&#xA;sudo nmap -sS -T5 -vvv -p- 10.10.11.252 -Pn -oG nmap_inicial Where the arguments mean:&#xA;-sS: SYN port scan&#xD;-T5: Using timing template 5 of NMAP&#xD;-vvv: Triple verbose so NMAP prints a lot of information&#xD;-p-: All ports are scanned&#xD;-Pn: Skips Host Discovery&#xD;-oG: Grep Format&#xD;The scan returns the following information:</description>
    </item>
    <item>
      <title>TwoMillion HTB Walkthrough</title>
      <link>https://chiefdennis.github.io/posts/htb_twomillion/</link>
      <pubDate>Tue, 16 Jan 2024 13:07:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/posts/htb_twomillion/</guid>
      <description>The TwoMillion HTB machine is an easy difficulty level HackTheBox Machine. The main techniques and tools used to crack this machine are:&#xA;- Command Injection&#xD;- Burpsuite&#xD;- CVE-2023-0386&#xD;- JS deobfuscation with Cyberchef&#xD;- API enumeration&#xD;Reconnaissance&#xD;Link to heading&#xD;We start a broad Nmap scan by executing the following command:&#xA;sudo nmap -sS -T5 -vvv -p- 10.10.11.221 -Pn -oG nmap_inicial Where the arguments mean:&#xA;-sS: SYN port scan&#xD;-T5: Using timing template 5 of NMAP&#xD;-vvv: Triple verbose so NMAP prints a lot of information&#xD;-p-: All ports are scanned&#xD;-Pn: Skips Host Discovery&#xD;-oG: Grep Format&#xD;The scan returns the following information:</description>
    </item>
    <item>
      <title>GPS NMEA TCP/IP stream to COM port via com0com and com2tcp</title>
      <link>https://chiefdennis.github.io/projects/nmea_ip_to_google_earth/</link>
      <pubDate>Fri, 29 Dec 2023 15:43:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/projects/nmea_ip_to_google_earth/</guid>
      <description>In this project we will explore how we can serve TCP/IP data coming in through an open port, and turn it into a virtual serial port or COM port. In this case, I have a router that has an internal GPS that can serve the NMEA sentences to a given IP and port via TCP/IP. However, most programs that use GPS (like Google Earth) do it through a COM port. So, how can we &amp;rsquo;translate&amp;rsquo; the TCP/IP data into a serial COM stream?</description>
    </item>
    <item>
      <title>Manage Entra ID users via Azure Portal</title>
      <link>https://chiefdennis.github.io/projects/manage_entra_id_users/</link>
      <pubDate>Sun, 03 Dec 2023 15:43:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/projects/manage_entra_id_users/</guid>
      <description>In this post we will learn how to create, edit and delete Microsoft Entra ID users. Microsoft Entra ID is an integrated cloud identity and access solution, and a leader in the market for managing directories, enabling access to applications, and protecting identities.&#xA;To create a user, first navigate to Microsoft Entra ID in the Azure Portal.&#xA;Then click on Users.&#xA;You will be seeing the Users page. On the left hand menu, we can see the following tabs:</description>
    </item>
    <item>
      <title>Clicker HTB Walkthrough</title>
      <link>https://chiefdennis.github.io/posts/htb_clicker/</link>
      <pubDate>Mon, 27 Nov 2023 13:07:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/posts/htb_clicker/</guid>
      <description>The Clicker HTB machine is a medium difficulty level HackTheBox Machine. The main techniques used to crack this machine are:&#xA;- SQL Injection&#xD;- CRLF Injection&#xD;- Parameter Tampering&#xD;- PHP Reverse Shell&#xD;- Perl_startup Local Privilege Escalation&#xD;Reconnaissance&#xD;Link to heading&#xD;We start a broad Nmap scan by executing the following command:&#xA;sudo nmap -sS -T5 -vvv -p- 10.10.11.232 -Pn -oG nmap_inicial Where the arguments mean:&#xA;-sS: SYN port scan&#xD;-T5: Using timing template 5 of NMAP&#xD;-vvv: Triple verbose so NMAP prints a lot of information&#xD;-p-: All ports are scanned&#xD;-Pn: Skips Host Discovery&#xD;-oG: Grep Format&#xD;The scan returns the following information:</description>
    </item>
    <item>
      <title>Codify HTB Walkthrough</title>
      <link>https://chiefdennis.github.io/posts/htb_codify/</link>
      <pubDate>Wed, 13 Sep 2023 13:07:16 +0100</pubDate>
      <guid>https://chiefdennis.github.io/posts/htb_codify/</guid>
      <description>The Codify HTB machine is a easy difficulty level HackTheBox Linux Machine. The main techniques used to crack this machine are:&#xA;- Hash cracking with JohnTheRipper&#xD;- Sandbox escape&#xD;- Batch Script Analysis&#xD;- Python Scripting&#xD;Reconnaissance&#xD;Link to heading&#xD;I started by running a NMAP scan to look for services and versions running on open ports;&#xA;We can see that the usual ports 22 and 80 are open. However, port 3000 is also open running node.</description>
    </item>
  </channel>
</rss>
