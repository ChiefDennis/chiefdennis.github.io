<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Local File Inclusion on Chief Dennis&#39; Blog</title>
    <link>http://localhost:1313/tags/local-file-inclusion/</link>
    <description>Recent content in Local File Inclusion on Chief Dennis&#39; Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 01 Apr 2025 13:07:16 +0100</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/local-file-inclusion/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DVR4 Offsec Walkthrough</title>
      <link>http://localhost:1313/posts/offsec_dvr4/</link>
      <pubDate>Tue, 01 Apr 2025 13:07:16 +0100</pubDate>
      <guid>http://localhost:1313/posts/offsec_dvr4/</guid>
      <description>&lt;h2 id=&#34;dvr4-offsec-walkthrough&#34;&gt;&#xD;&#xA;  DVR4 Offsec Walkthrough&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#dvr4-offsec-walkthrough&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;p&gt;&lt;img alt=&#34;image&#34; src=&#34;http://localhost:1313/posts/offsec_dvr4/Picture23.png&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;lfi-vulnerability&#34;&gt;&#xD;&#xA;  LFI Vulnerability&#xD;&#xA;  &lt;a class=&#34;heading-link&#34; href=&#34;#lfi-vulnerability&#34;&gt;&#xD;&#xA;    &lt;i class=&#34;fa-solid fa-link&#34; aria-hidden=&#34;true&#34; title=&#34;Link to heading&#34;&gt;&lt;/i&gt;&#xD;&#xA;    &lt;span class=&#34;sr-only&#34;&gt;Link to heading&lt;/span&gt;&#xD;&#xA;  &lt;/a&gt;&#xD;&#xA;&lt;/h3&gt;&#xD;&#xA;&lt;p&gt;Local File Inclusion (LFI) is a security vulnerability in web applications that allows an attacker to access files stored on the server. This failure occurs when an applicationconstructs file paths based on user input without properly validating its contents. As a result, an attacker can manipulate those paths to read sensitive system files and, in some cases, execute malicious code.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
